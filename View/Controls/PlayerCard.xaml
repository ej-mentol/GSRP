<UserControl x:Class="GSRP.Views.Controls.PlayerCard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:GSRP.ViewModels"
             xmlns:conv="clr-namespace:GSRP.Converters"
             xmlns:controls="clr-namespace:GSRP.Views.Controls"
             xmlns:services="clr-namespace:GSRP.Services"
             xmlns:ui="http://schemas.modernwpf.com/2019">

    <UserControl.Resources>
        <conv:IconCornerToHorizontalAlignmentConverter x:Key="CornerToHorizontal"/>
        <conv:IconCornerToVerticalAlignmentConverter x:Key="CornerToVertical"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <conv:StringToImageSourceConverter x:Key="StringToImage"/>
        <conv:IconOffsetToMarginConverter x:Key="IconOffsetToMargin"/>
        <conv:TupleConverter x:Key="TupleConverter"/>
        <conv:PathToImageConverter x:Key="PathToImage"/>
        <conv:IsGreaterThanZeroConverter x:Key="IsGreaterThanZeroConverter"/>
        <conv:EqualityToVisibilityConverter x:Key="EqualityToVisibilityConverter"/>
        <conv:BanTooltipConverter x:Key="BanTooltipConverter"/>
        <conv:IsNullOrEmptyToVisibilityConverter x:Key="IsNullOrEmptyToVisibilityConverter"/>
    </UserControl.Resources>

    <Border x:Name="MainBorder"
            MinHeight="92"
            BorderBrush="#2d2e33"
            BorderThickness="0,0,0,1"
            Padding="24,18"
            Cursor="Hand"
            Background="#1e1f23"
            Tag="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=Tag}">

        <Border.Effect>
            <DropShadowEffect Color="#000000" Direction="270" ShadowDepth="1" BlurRadius="3" Opacity="0.3"/>
        </Border.Effect>

        <Border.ContextMenu>
            <ContextMenu Style="{StaticResource ThemedContextMenu}">
                <MenuItem Header="Copy Name"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.CopyPlayerNameCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#3b82f6" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="👤" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Copy Alias"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.CopyPlayerAliasCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#10b981" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="📝" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Copy SteamID64"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.CopyPlayerIdCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#f59e0b" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="🔢" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Copy SteamID"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.CopyPlayerSteamId2Command, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#84cc16" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="🆔" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Open in Browser"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.OpenInBrowserCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#10b981" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="🌐" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="Copy to Report"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.CopyPlayerToReportCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#ef4444" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="🚩" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Copy as Report" Style="{StaticResource ThemedMenuItem}" x:Name="CopyAsReportMenuItem" IsEnabled="False">
                    <MenuItem.Icon>
                        <Border Background="#d946ef" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="📜" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="Set Alias"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.UpdatePlayerAliasAsyncCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#06b6d4" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="✏️" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Change Game Color"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.SetPlayerGameColorAsyncCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#ec4899" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="🎨" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Change Steam Color"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.SetPlayerSteamColorAsyncCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#06b6d4" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="🎨" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Change Alias Color"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.SetPlayerAliasColorAsyncCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#d946ef" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="🎨" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="Copy as Image"
                          Style="{StaticResource ThemedMenuItem}"
                          Command="{Binding PlacementTarget.Tag.CreatePlayerCardImageCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Icon>
                        <Border Background="#6366f1" CornerRadius="3" Width="16" Height="16">
                            <TextBlock Text="📷" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </Border.ContextMenu>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0"
                    Width="52" Height="52"
                    CornerRadius="10"
                    Background="{Binding FallbackAvatarBrush}"
                    Margin="0,0,16,0"
                    Tag="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext}">
                <Grid>
                    <ui:ProgressRing IsActive="True"
                                     Width="32" Height="32"
                                     Foreground="White">
                        <ui:ProgressRing.Style>
                            <Style TargetType="ui:ProgressRing">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsBusy}" Value="True"/>
                                            <Condition Binding="{Binding IsAvatarCached}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ui:ProgressRing.Style>
                    </ui:ProgressRing>

                    <Image Width="52" Height="52" Stretch="UniformToFill"
                           Source="{Binding AvatarPath, Converter={StaticResource StringToImage}}">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAvatarCached}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                        <Image.Clip>
                            <RectangleGeometry Rect="0,0,52,52" RadiusX="10" RadiusY="10"/>
                        </Image.Clip>
                    </Image>

                    <TextBlock Text="{Binding Initials}" Foreground="White" FontWeight="SemiBold"
                               HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAvatarCached}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AvatarDownloadFailed}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Border CornerRadius="10"
                            Visibility="{Binding AvatarDownloadFailed, Converter={StaticResource BoolToVis}}">
                        <Border.Background>
                            <SolidColorBrush Color="Black" Opacity="0.6"/>
                        </Border.Background>
                        <TextBlock Text="✕"
                                   Foreground="#d1d5db"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>

                    <Border Width="20" Height="20" CornerRadius="10"
                            Background="#1e1f23" BorderBrush="#4a4a4e" BorderThickness="1"
                            HorizontalAlignment="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource CornerToHorizontal}}"
                            VerticalAlignment="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource CornerToVertical}}"
                            Margin="{Binding DataContext.CurrentSettings.IconOffset, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource IconOffsetToMargin}}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IconPath}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IconPath}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}}" Value="BeforeNickname">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}}" Value="AfterNickname">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}}" Value="AfterAlias">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Image Source="{Binding IconPath, Converter={StaticResource StringToImage}}" Width="14" Height="14"/>
                    </Border>
                </Grid>

                <Border.ContextMenu>
                    <ContextMenu Style="{StaticResource ThemedContextMenu}"
                                 ItemsSource="{Binding PlacementTarget.Tag.AvailableIconInfos, RelativeSource={RelativeSource Self}}">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource ThemedMenuItem}">
                                <Setter Property="Header" Value="{Binding Name}"/>
                                <Setter Property="Command" Value="{Binding Path=PlacementTarget.Tag.SetPlayerIconAsyncCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                <Setter Property="CommandParameter">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource TupleConverter}">
                                            <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=controls:PlayerCard}"/>
                                            <Binding />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Icon" Value="{Binding ImagePath, Converter={StaticResource PathToImage}}"/>
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>

            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,4">
                    <Image Source="{Binding IconPath, Converter={StaticResource StringToImage}}" Width="16" Height="16" Margin="0,0,5,0">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}}" Value="BeforeNickname"/>
                                            <Condition Binding="{Binding IconPath, Converter={StaticResource IsNullOrEmptyToVisibilityConverter}}" Value="Visible"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Foreground="{Binding PlayerColorBrush, TargetNullValue=#f8fafc}" FontWeight="SemiBold" FontSize="17" FontFamily="Segoe UI">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding DisplayNameForUI}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DisplayNameForUI}" Value="Unknown">
                                        <Setter Property="FontStyle" Value="Italic"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Image Source="{Binding IconPath, Converter={StaticResource StringToImage}}" Width="16" Height="16" Margin="5,0,0,0">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}}" Value="AfterNickname"/>
                                            <Condition Binding="{Binding IconPath, Converter={StaticResource IsNullOrEmptyToVisibilityConverter}}" Value="Visible"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Border Background="{Binding AliasColorBrush, TargetNullValue=#3b82f6}" CornerRadius="6" Padding="8,3" Margin="10,0,0,0" Visibility="{Binding HasAlias, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="{Binding Alias}" Foreground="White" FontSize="12" FontWeight="Medium"/>
                    </Border>
                    <Image Source="{Binding IconPath, Converter={StaticResource StringToImage}}" Width="16" Height="16" Margin="5,0,0,0">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DataContext.CurrentSettings.IconPlacement, RelativeSource={RelativeSource AncestorType=Window}}" Value="AfterAlias"/>
                                            <Condition Binding="{Binding IconPath, Converter={StaticResource IsNullOrEmptyToVisibilityConverter}}" Value="Visible"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,3">
                    <TextBlock Text="{Binding SteamId2}" Foreground="#a6a8ab" FontFamily="Consolas" FontSize="14" VerticalAlignment="Center"/>
                    <Grid Margin="8,0,0,0" Height="18" VerticalAlignment="Center">
                        <!-- Ban Icons Panel -->
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCheckingBans}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                                                            <StackPanel.ToolTip>
                                <ToolTip DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <StackPanel>
                                        <TextBlock Text="Ban Status" FontWeight="Bold" Margin="0,0,0,5"/>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource BanTooltipConverter}">
                                                    <Binding Path="BanDate"/>
                                                    <Binding Path="NumberOfVacBans"/>
                                                    <Binding Path="IsCommunityBanned"/>
                                                    <Binding Path="EconomyBan"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </StackPanel>
                                </ToolTip>
                            </StackPanel.ToolTip>
                            <ui:FontIcon Glyph="&#xE72E;" FontFamily="Segoe MDL2 Assets" Foreground="#ef4444" FontSize="14" Visibility="{Binding IsVacBanned, Converter={StaticResource BoolToVis}}" Margin="0,0,4,0"/>
                            <ui:FontIcon Glyph="&#xE716;" FontFamily="Segoe MDL2 Assets" Foreground="#ef4444" FontSize="14" Visibility="{Binding IsCommunityBanned, Converter={StaticResource BoolToVis}}" Margin="0,0,4,0"/>
                            <ui:FontIcon Glyph="&#xE7BF;" FontFamily="Segoe MDL2 Assets" Foreground="#ef4444" FontSize="14" Visibility="{Binding EconomyBan, Converter={StaticResource IsNullOrEmptyToVisibilityConverter}, ConverterParameter='none'}"/>
                        </StackPanel>

                        <!-- VAC Ban Checking Text -->
                        <TextBlock Text="VAC Ban checking..."
                                   Foreground="#a6a8ab"
                                   FontStyle="Italic"
                                   FontSize="14"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding IsCheckingBans, Converter={StaticResource BoolToVis}}"/>
                    </Grid>
                </StackPanel>
                
                <Grid Height="20">
                    <TextBlock Text="{Binding DisplayPersonaName}"
                               Foreground="{Binding PersonaNameColorBrush, TargetNullValue=#629BF8}"
                               FontSize="15"
                               FontFamily="Segoe UI"
                               Visibility="{Binding HasPersonaName, Converter={StaticResource BoolToVis}}"/>

                    <TextBlock Foreground="#a6a8ab"
                               FontStyle="Italic"
                               FontSize="14"
                               FontFamily="Segoe UI">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HasPersonaName}" Value="False"/>
                                            <Condition Binding="{Binding IsBusy}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Text" Value="Updating..."/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HasPersonaName}" Value="False"/>
                                            <Condition Binding="{Binding IsBusy}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Text" Value="Unknown"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </StackPanel>

            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,0">
                <ui:FontIcon FontSize="14" Margin="0,0,6,0" Foreground="#6b7280">
                    <ui:FontIcon.Style>
                        <Style TargetType="ui:FontIcon">
                            <Setter Property="Glyph" Value="&#xE916;"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProfileStatus}" Value="NotFound">
                                    <Setter Property="Glyph" Value="&#xE72E;"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ProfileStatus}" Value="Private">
                                    <Setter Property="Glyph" Value="&#xE72E;"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ui:FontIcon.Style>
                </ui:FontIcon>
                <TextBlock Text="{Binding RegistrationStatusDisplay}"
                           Foreground="{Binding RegistrationStatusColorBrush}"
                           FontSize="14"
                           FontWeight="Medium"
                           FontFamily="Segoe UI" />
            </StackPanel>

            <Button Grid.Column="3" 
                    Style="{StaticResource MenuButtonStyle}" 
                    Tag="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=Tag}"
                    Click="MenuButton_Click">
                <Button.ContextMenu>
                    <ContextMenu Style="{StaticResource ThemedContextMenu}" x:Name="MenuButtonContextMenu">
                        <MenuItem Header="Update Profile"
                                  Style="{StaticResource ThemedMenuItem}"
                                  Click="UpdateVacStatus_Click">
                            <MenuItem.Icon>
                                <Border Background="#3b82f6" CornerRadius="3" Width="16" Height="16">
                                    <TextBlock Text="🔄" Foreground="White" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>

                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                    <Ellipse Width="4" Height="4" Fill="#a6a8ab" Margin="0,0,0,2"/>
                    <Ellipse Width="4" Height="4" Fill="#a6a8ab" Margin="0,0,0,2"/>
                    <Ellipse Width="4" Height="4" Fill="#a6a8ab"/>
                </StackPanel>
            </Button>
        </Grid>
    </Border>
</UserControl>
